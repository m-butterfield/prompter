package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.24

import (
	"context"

	"github.com/m-butterfield/prompter/server/app/data"
	stripe "github.com/stripe/stripe-go/v74"
	"github.com/stripe/stripe-go/v74/checkout/session"
)

// GetCheckoutSession is the resolver for the getCheckoutSession field.
func (r *mutationResolver) GetCheckoutSession(ctx context.Context, paymentPlanName data.PaymentPlanName) (string, error) {
	//user, err := loggedInUser(ctx)
	//if err != nil {
	//	return "", internalError(err)
	//}

	stripe.Key = "stripekey"

	params := &stripe.CheckoutSessionParams{
		LineItems: []*stripe.CheckoutSessionLineItemParams{
			{
				Price:    stripe.String("priceid"),
				Quantity: stripe.Int64(1),
			},
		},
		Mode:       stripe.String("payment"),
		SuccessURL: stripe.String("https://example.com/success"),
	}

	s, err := session.New(params)
	if err != nil {
		return "", internalError(err)
	}

	return s.ID, nil
}

// GetPaymentPlanTemplates is the resolver for the getPaymentPlanTemplates field.
func (r *queryResolver) GetPaymentPlanTemplates(ctx context.Context) ([]*data.PaymentPlanTemplate, error) {
	return data.GetPaymentPlanTemplates(), nil
}
